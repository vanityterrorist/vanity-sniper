import fs from "fs"; import tls from "tls"; import WebSocket from "ws"; import extractJsonPkg from "extract-json-from-string"; const extractJson = extractJsonPkg; const config = { discordHost: "canary.discord.com", discordToken: "", guildId: "", channelId: "", gatewayUrl: "wss://gateway.discord.gg", os: "linux", browser: "firefox", device: "firefox", password: "19x41" }; let vanity; const guilds = {}; let start; let end; const tlsSocket = tls.connect({ host: config.discordHost, port: 443 }); tlsSocket.on("data", async (data) => { const ext = extractJson(data.toString()); const find = ext.find((e) => e.code) || ext.find((e) => e.message); if (find) { end = Date.now(); const responseTime = end - start; console.log(`Response received in ${responseTime}ms:`, find); const requestBody = JSON.stringify({ content: `@everyone ${vanity}\n\`\`\`json\n${JSON.stringify(find, null, 2)}\`\`\`` }); const contentLength = Buffer.byteLength(requestBody); const requestHeader = [`POST /api/v9/channels/${config.channelId}/messages HTTP/1.1`, "Host: discord.com", `Authorization: ${config.discordToken}`, "Content-Type: application/json", `Content-Length: ${contentLength}`, "", ""].join("\r\n"); const request = requestHeader + requestBody; tlsSocket.write(request); } }); tlsSocket.on("error", (error) => { console.log(`TLS error:`, error); process.exit(); }); tlsSocket.on("end", () => { console.log("TLS connection closed"); process.exit(); }); tlsSocket.on("secureConnect", () => { console.log("TLS connection established"); const websocket = new WebSocket(config.gatewayUrl); websocket.onclose = (event) => { console.log(`WebSocket connection closed ${event.reason} ${event.code}`); process.exit(); }; websocket.onmessage = async (message) => { const { d, op, t } = JSON.parse(message.data); if (t === "GUILD_UPDATE") { const find = guilds[d.guild_id]; if (find && find !== d.vanity_url_code) { start = Date.now(); vanity = `guild patch ${find}`; console.log(`GUILD UPDATE: ${d.guild_id} || VANITY: ${find} => ${d.vanity_url_code}`); const payload = { code: find }; const requestBody = JSON.stringify(payload); const requestHeader = [`PATCH /api/v8/guilds/${config.guildId}/vanity-url HTTP/1.1`, `Host: ${config.discordHost}`, `Authorization: ${config.discordToken}`, `Content-Type: application/json`, `Content-Length: ${requestBody.length}`, "", ""].join("\r\n"); const request = requestHeader + requestBody; tlsSocket.write(request); } } else if (t === "READY") { d.guilds.forEach((guild) => { if (guild.vanity_url_code) { guilds[guild.id] = guild.vanity_url_code; console.log(`Guild: ${guild.id} || Vanity: ${guild.vanity_url_code}`); } else { console.log(`Guild without vanity: ${guild.name}`); } }); console.log('Bot ready! Guilds loaded:', Object.keys(guilds).length); } if (op === 10) { websocket.send(JSON.stringify({ op: 2, d: { token: config.discordToken, intents: 1 << 0, properties: { os: config.os, browser: config.browser, device: config.device } } })); setInterval(() => { websocket.send(JSON.stringify({ op: 1, d: null })); }, d.heartbeat_interval); } else if (op === 7) { console.log("Reconnection required"); process.exit(); } }; setInterval(() => { tlsSocket.write(["GET / HTTP/1.1", `Host: ${config.discordHost}`, "", ""].join("\r\n")); }, 7500); });
